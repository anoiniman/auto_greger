in building primitives, our code is a bit wierd, and I don't know if we can readily take
more than 1 base in base_table right now, because of the none iterator, and maybe
even the standard iterator might have problems with that, just keep this in mind and if
it becomes a problem preemptively fix it

Enventually the print() function will be overloaded and the comms.robot_send function
will be changed so that they ignore things tagged with "debug", because, it actually
consumes quite a bit of power to both print characters and send characters through
the linked network so yeah

Última coisa a verificar na coisa das builds é ver se os special blocks estão a ser gravos
com sucesso, mas não duvido de tal

After some reading I've come to the conclusion that the cause of our power problems 
is in the print (statements) mainly (a lot of screen writing and refreshing, both in
previous text scrolling up and new one being written down) -- and secundarily in
sending network messages (they'll scale with large distances) -- a solution for the first
is re-directing global "print" into a no-op function, a solution for the second is simply
not sending messages (re-directing debug messages into no-op, transmitting only errors,
warnings and responses) and/or to batch them, cost scales with distance? Maybe Idk how
it workds for linked-cards.

found-it:
linked cards work as such:
-(packet.size / 32.0 
+ Settings.get.wirelessCostPerRange(Tier.Two) 
* Settings.get.maxWirelessRange(Tier.Two) * 5)

this is:
packet.size / 32.0 + 0.05 * 400 * 5
assuming a packet.size of 128:
4 + 100 = 104
a base cost of 100 power per message, fortunatly this cost doesn't vary with distance,
100 is very manageable, but it means that a fully charged robot can only send 200
messages before running out of battery, this compares with a move cost of 15, which is
8 times smaller, this means you can move 1600 blocks before running out of power.

This also means that our power issues come from printing and sending too many debug messages
this will be fixed!

Clear && do walls (6x6) space with (7x7) walls?
-> 7x7 space with 8x8 walls

-- ils transmissions and others of the sort should be batched for transmission
-- add option to ifs multiple steps in a row, at least during the first step
Write command that dry runs all primitives to check for dynamic errors
... all scripts ...
... all recipes ...
etc.

More debug prints in inventory, and add command that allows to turn off/on debug mode
build_road behaviour/instruction is necessary also <Maybe Done now?>

vvvvvvvvvv
Test if geolyzer scanning dir is relative to robot orientation, rather than coord abs
-- and -- write tool code, and of course, general inventory code after that


chunk_move improve the get_to_nearest algorithm for when we are inside buildings tehe
or just move towards the door first tehe
add flag to build/primitives called can_fail -> which means that if it fails to place
a block, or clear a block it will just continue going


have it be that when we switch to a different reasoning script we make sure that
the command queue is empty in relation to reasoning commands, prob. will be
guarenteed by the way scripts worky anyway, but we can never be sure,
act with intencionality

tool chest in crafting area
